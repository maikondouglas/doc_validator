name: Create Release

on:
  push:
    tags:
      - 'v*' # Dispara o workflow para tags que começam com "v"

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure git to use PAT
      run: |
        git remote set-url origin https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Changelog:
          - Add details about this release here.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Configure git for push_gem
      if: steps.create_release.outputs.upload_url != ''
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git remote set-url origin https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}
        gem_version=$(grep -oP '\d+\.\d+\.\d+' *.gemspec | head -n 1)
        git fetch --tags # Certifique-se de que as tags remotas estão sincronizadas
        git tag "v${gem_version}"
        git push origin "v${gem_version}" --force # Use --force se necessário para sobrescrever

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./path/to/your/asset.zip
        asset_name: asset.zip
        asset_content_type: application/zip
